name: Release

on:
  pull_request:
    types: [closed]
    branches:
      - main

env:
  NODE_VERSION: 20
  PNPM_VERSION: 9

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    runs-on: ubuntu-latest
    if: |
      github.event.pull_request.merged == true &&
      github.event.pull_request.base.ref == 'main' &&
      github.event.pull_request.head.ref == 'develop'
    permissions:
      contents: write
      pull-requests: write
      id-token: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          registry-url: "https://registry.npmjs.org/"
          cache: "pnpm"

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Determine Release Type
        id: determine_release_type
        run: |
          # Extract PR labels
          LABELS=$(echo "${{ toJSON(github.event.pull_request.labels.*.name) }}" | jq -r '.[]')

          # Check for beta or stable labels
          IS_BETA=false
          IS_STABLE=false

          for label in $LABELS; do
            if [ "$label" = "release:beta" ]; then
              IS_BETA=true
            fi
            if [ "$label" = "release:stable" ]; then
              IS_STABLE=true
            fi
          done

          if [ "$IS_BETA" = false ] && [ "$IS_STABLE" = false ]; then
            echo "No release label found. Failing..."
            exit 1
          fi

          if [ "$IS_BETA" = true ] && [ "$IS_STABLE" = true ]; then
            echo "Both stable and beta labels found. Please choose one."
            exit 1
          fi

          if [ "$IS_BETA" = true ]; then
            echo "release_type=beta" >> $GITHUB_OUTPUT
            echo "npm_tag=beta" >> $GITHUB_OUTPUT
          elif [ "$IS_STABLE" = true ]; then
            echo "release_type=stable" >> $GITHUB_OUTPUT
            echo "npm_tag=latest" >> $GITHUB_OUTPUT
          fi

      - name: Lint and Format
        run: pnpm run check

      - name: Run Tests
        run: pnpm run test

      # Enter pre-release mode for beta
      - name: Enter Beta Pre-Release Mode
        if: steps.determine_release_type.outputs.release_type == 'beta'
        run: pnpm changeset pre enter beta

      # Exit pre-release mode for stable
      - name: Exit Pre-Release Mode
        if: steps.determine_release_type.outputs.release_type == 'stable'
        run: pnpm changeset pre exit || true

      - name: Version Packages
        run: pnpm changeset version

      - name: Build Packages
        run: pnpm build

      - name: Commit Version Changes
        run: |
          # Add and commit the updated package versions and changelogs
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          if ! git diff --cached --quiet; then
            git commit -m "chore: update versions and changelogs"
            git push origin main
          fi

      - name: Publish Packages
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
          echo "registry=https://registry.npmjs.org/" >> .npmrc
          echo "always-auth=true" >> .npmrc

          if [ "${{ steps.determine_release_type.outputs.release_type }}" = "beta" ]; then
            pnpm changeset publish --tag beta
          else
            pnpm changeset publish
          fi
